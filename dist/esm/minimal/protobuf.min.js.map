{"version":3,"sources":["../../../node_modules/@protobufjs/aspromise/index.js","../../../node_modules/@protobufjs/base64/index.js","../../../node_modules/@protobufjs/eventemitter/index.js","../../../node_modules/@protobufjs/float/index.js","../../../node_modules/@protobufjs/inquire/index.js","../../../node_modules/@protobufjs/utf8/index.js","../../../node_modules/@protobufjs/pool/index.js","../../../src/util/longbits.js","../../../src/util/minimal.js","../../../src/writer.js","../../../src/writer_buffer.js","../../../src/reader.js","../../../src/reader_buffer.js","../../../src/rpc/service.js","../../../src/rpc.js","../../../src/roots.js","../../../src/index-minimal.js"],"names":["aspromise","asPromise","fn","ctx","params","Array","arguments","length","offset","index","pending","Promise","resolve","reject","err","apply","base64","string","p","n","charAt","Math","ceil","b64","s64","i","encode","buffer","start","end","t","parts","chunk","j","b","push","String","fromCharCode","slice","join","invalidEncoding","decode","c","charCodeAt","undefined","Error","test","eventemitter","EventEmitter","this","_listeners","prototype","on","evt","off","listeners","splice","emit","args","float","factory","exports","Float32Array","f32","f8b","Uint8Array","le","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","round","exponent","floor","log","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","bind","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire_1","inquire","moduleName","mod","eval","replace","Object","keys","e","utf8","len","read","write","c1","c2","pool_1","pool","alloc","size","SIZE","MAX","slab","call","longbits","LongBits","util","require$$0","zero","toNumber","zzEncode","zzDecode","zeroHash","fromNumber","value","from","isString","Long","parseInt","fromString","low","high","unsigned","toLong","Boolean","fromHash","hash","toHash","mask","part0","part1","part2","merge","dst","src","ifNotSet","newError","name","CustomError","message","properties","defineProperty","get","captureStackTrace","stack","create","constructor","toString","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","isNode","global","process","versions","node","window","self","emptyArray","freeze","emptyObject","isInteger","Number","isFinite","isObject","isset","isSet","obj","prop","hasOwnProperty","isArray","Buffer","utf8Write","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","bits","fromBits","lcFirst","str","toLowerCase","substring","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","bytes","json","_configure","encoding","allocUnsafe","writer","Writer","BufferWriter","Op","next","noop","State","head","tail","states","writeByte","writeVarint32","VarintOp","writeVarint64","writeFixed32","subarray","_push","uint32","int32","sint32","uint64","int64","sint64","bool","fixed32","sfixed32","fixed64","sfixed64","double","writeBytes","set","fork","reset","ldelim","finish","BufferWriter_","writer_buffer","writeStringBuffer","writeBytesBuffer","copy","byteLength","reader","Reader","BufferReader","indexOutOfRange","writeLength","RangeError","create_array","isBuffer","readLongVarint","readFixed32_end","readFixed64","_slice","skip","skipType","wireType","BufferReader_","reader_buffer","utf8Slice","min","service","Service","rpcImpl","requestDelimited","responseDelimited","TypeError","rpcCall","method","requestCtor","responseCtor","request","callback","response","setTimeout","endedByRPC","roots","protobuf","configure","build","rpc"],"mappings":"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","file":"protobuf.min.js","sourcesContent":["\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n"],"sourceRoot":"."}